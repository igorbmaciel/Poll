// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Poll.Infra.Context;

namespace Poll.Infra.Migrations
{
    [DbContext(typeof(PollContext))]
    [Migration("20201108033429_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Poll.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeId");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("pk_employees");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Poll.Domain.Entities.Tasks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TasksId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_tasks");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Poll.Domain.Entities.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VoteId");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnName("Comment")
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Date")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("(now() at time zone 'utc')");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnName("employeeid");

                    b.Property<Guid>("TaskId")
                        .HasColumnName("taskid");

                    b.HasKey("Id")
                        .HasName("pk_votes");

                    b.HasIndex("EmployeeId")
                        .HasName("ix_votes_employeeid");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TaskId");

                    b.ToTable("Vote");
                });

            modelBuilder.Entity("Poll.Domain.Entities.Vote", b =>
                {
                    b.HasOne("Poll.Domain.Entities.Employee", "Employee")
                        .WithMany("VoteList")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Vote_Employee")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Poll.Domain.Entities.Tasks", "Tasks")
                        .WithMany("VoteList")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_Vote_Tasks")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
